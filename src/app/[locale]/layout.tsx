import React from "react";
import { i18nConfig } from "@/i18next.config";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { dir } from 'i18next';
import "../globals.css";

interface RootLayoutProps {
  children: React.ReactNode;
};

// Literally only needed because Typescript complains at build time...
interface RootLayoutPropsExtended {
  children: React.ReactNode;
  params: { locale: Locale };
  searchParams?: { [key: string]: string | string[] | undefined };
};

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return i18nConfig.locales.map(locale => ({ locale }));
}

export default function RootLayout(props: Readonly<RootLayoutProps | RootLayoutPropsExtended>) {
  const { children, params: { locale } } = {
    params: {
      locale: 'en',
    },
    ...props,
  };

  return (
    <html lang={locale} dir={dir(locale)}>
      <body className={inter.className}>{children}</body>
    </html>
  );
}
